{"ast":null,"code":"var _jsxFileName = \"/Users/toast/work/facebook-messenger-clone/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Button, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([{\n    username: \"sonny\",\n    message: \"sir\"\n  }, {\n    username: \"conner\",\n    message: \"whazzz up\"\n  }]);\n  const [username, setUsername] = useState(\"\"); //useState = variable in REACT\n  //useEffect = run code on a condition in REACT\n\n  useEffect(() => {\n    // run once when the app component loads\n    db.collection(\"messages\").onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    });\n  }, []);\n  useEffect(() => {\n    setUsername(prompt(\"Please enter your name\"));\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    db.collection(\"messages\").add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setMessages([...messages, {\n      username: username,\n      text: input\n    }]);\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Hello Wizards!\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, username), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"my-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Enter a message...\"), /*#__PURE__*/React.createElement(Input, {\n    value: input,\n    onChange: event => setInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !input,\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Send Message\"))), messages.map(message => /*#__PURE__*/React.createElement(Message, {\n    username: username,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/toast/work/facebook-messenger-clone/src/App.js"],"names":["React","useState","useEffect","Button","FormControl","InputLabel","Input","Message","db","firebase","App","input","setInput","messages","setMessages","username","message","setUsername","collection","onSnapshot","snapshot","docs","map","doc","data","prompt","sendMessage","event","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","text","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Button, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport Message from \"./Message\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([\n    { username: \"sonny\", message: \"sir\" },\n    { username: \"conner\", message: \"whazzz up\" }\n  ]);\n  const [username, setUsername] = useState(\"\");\n  //useState = variable in REACT\n  //useEffect = run code on a condition in REACT\n\n  useEffect(() => {\n    // run once when the app component loads\n    db.collection(\"messages\").onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    });\n  }, []);\n\n  useEffect(() => {\n    setUsername(prompt(\"Please enter your name\"));\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    db.collection(\"messages\").add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setMessages([...messages, { username: username, text: input }]);\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Hello Wizards!</h1>\n      <h2>{username}</h2>\n\n      <form>\n        <FormControl>\n          <InputLabel htmlFor=\"my-input\">Enter a message...</InputLabel>\n\n          <Input\n            value={input}\n            onChange={event => setInput(event.target.value)}\n          />\n\n          <Button\n            disabled={!input}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={sendMessage}\n          >\n            Send Message\n          </Button>\n        </FormControl>\n      </form>\n\n      {messages.map(message => (\n        <Message username={username} message={message} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}